version: '3'

name: tcd

include:
  - development.yml

services:

  # this will be initialized, unsealed, and setup policies by vault-operator
  vault:
    image: hashicorp/vault:1.15
    ports: [8200:8200]
    cap_add: [IPC_LOCK]
    volumes:
      - vol_vault_file:/vault/file
      - vol_vault_logs:/vault/logs
    environment:
      # VAULT_DEV_ROOT_TOKEN_ID: root
      VAULT_LOCAL_CONFIG: |
        {
          "storage": {
            "file": {
              "path": "/vault/file"
            }
          },
          "listener": [
            {
              "tcp": {
                "address": "0.0.0.0:8200",
                "tls_disable": true
              }
            }
          ],
          "default_lease_ttl": "168h",
          "max_lease_ttl": "720h",
          "ui": true,
          "api_addr": "http://127.0.0.1:8200"
        }
    command: server

  # this will initial vault & keep unseal keys for unsealing, setup policies.
  # todo: all dependent services should wait for vault-operator completed successfully
  # todo: all dependent services maybe use vault-agent to get secrets and auto-renew-and-restart
  vault-operator:
    depends_on: [vault]
    image: hashicorp/vault:1.15
    volumes:
      - ./scripts/vault-operator.sh:/entrypoint.sh
      - ./volumes/vault-operator:/vol
    command: /entrypoint.sh
    environment:
      VAULT_ADDR: http://vault:8200
  
  db:
    image: postgres:16-alpine3.19
    volumes:
      - vol_db:/var/lib/postgresql/data
      # - ./images/postgresql/init.sql:/docker-entrypoint-initdb.d/init.sql
    environment:
      POSTGRES_DB: tcd
      POSTGRES_USER: tcd
      # new password does not apply once database is initialized
      POSTGRES_PASSWORD: ft_password

  backend:
    build: ./images/django
    image: tcd/django
    restart: unless-stopped
    depends_on: [db]
    # internal testing port. public access via nginx
    ports: [127.0.0.1:8000:80]
    volumes:
      - vol_app:/app
    environment:
      POSTGRES_HOST: db
      POSTGRES_DB: tcd
      POSTGRES_USER: tcd
      POSTGRES_PASSWORD: ft_password
      CLIENT_ID: u-s4t2ud-888abf99e7a96317ce8952769a0be4b4c4a092bed5f52d27b85ae3b989536a15
      CLIENT_SECRET: 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
      HTTP_HOSTNAME: unduly-right-sloth.ngrok-free.app
    # command: sleep infinity

  # nginx + modsecurity, slow building modsecurity from source code
  frontend:
    depends_on: [backend]
    build: ./images/nginx
    image: tcd/nginx
    ports: [443:443, 80:80]
    volumes:
      - ./images/django/app/static:/static:ro
    # environment:
    #   SSL_DOMAIN: $DOMAIN
    
volumes:

  vol_app:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./images/django/app

  vol_db:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./volumes/db

  vol_vault_file:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./volumes/vault_file

  vol_vault_logs:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./volumes/vault_logs

networks:
  default:
